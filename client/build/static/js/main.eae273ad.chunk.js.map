{"version":3,"sources":["GlobalStyles.js","Scroll.js","Game.js","Schedule.js","App.js","index.js"],"names":["createGlobalStyle","ScrollButton","styled","button","Scroll","id","date","setDate","onClick","Date","getDate","size","GameWrap","li","Game","arena","home","visitor","startTime","startTimeTBD","current","status","duration","endTime","useState","expand","setExpand","style","border","triCode","name","city","stateAbbr","className","score","Number","undefined","hours","minutes","win","loss","seriesWin","seriesLoss","Wrap","div","ScheduleWrap","GamesWrap","ul","Schedule","games","setGames","load","setLoad","useEffect","fetch","toISOString","slice","split","join","then","res","json","data","length","toDateString","map","game","hTeam","vTeam","startTimeEastern","isStartTimeTBD","endTimeUTC","isGameActivated","statusNum","gameDuration","gameId","Wrapper","Header","header","App","GlobalStyles","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eae273ad.chunk.js","sourcesContent":["// Global CSS Styles via \"styled-components\"\r\n// Default settings for all front-end visual rendering\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n    // Default Stylings for HTML5\r\n    html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    // Default Font-Family for code\r\n    code {\r\n        font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n    }\r\n    // HTML5 Display Set for Older Browser Compatibility\r\n    article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n`;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n// Arrow React Icons\r\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\"\r\n\r\n// Date Scroll Button Component\r\nconst Scroll = ({ id, date, setDate }) => {\r\n    return <ScrollButton\r\n        onClick={() => id === \"left\" ?\r\n        setDate(new Date(date.setDate(date.getDate() - 1))) : id === \"right\" ?\r\n        setDate(new Date(date.setDate(date.getDate() + 1))) : null\r\n    }>\r\n        {id === \"left\" && <>\r\n            <FaArrowLeft size=\"100px\" />\r\n            Previous Day\r\n        </>}\r\n\r\n        {id === \"right\" && <>\r\n            <FaArrowRight size=\"100px\" />\r\n            Next Day\r\n        </>}\r\n    </ScrollButton>\r\n};\r\n\r\n// Styled Component\r\nconst ScrollButton = styled.button`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n    max-width: 200px;\r\n    height: 100%;\r\n    padding: 20px;\r\n    font-weight: bold;\r\n    font-size: large;\r\n    border: none;\r\n    background: none;\r\n    cursor: pointer;\r\n    transition: 200ms ease-in-out;\r\n\r\n    &:hover { background: white };\r\n\r\n    &:active { background: #aaa };\r\n`;\r\n\r\nexport default Scroll;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GoTriangleUp, GoTriangleRight } from \"react-icons/go\";\r\n\r\n// Game Schedule Item Component\r\nconst Game = ({ // Deconstructed Props\r\n    arena, home, visitor, startTime, startTimeTBD,\r\n    current, status, duration, endTime,\r\n}) => {\r\n    const [expand, setExpand] = useState(false);\r\n\r\n    return <GameWrap\r\n        style={{ border: expand && \"3px solid green\" }}\r\n        onClick={() => setExpand(!expand)}\r\n    >\r\n        <h3>{ // Main schedule in Eastern Time\r\n            `${\r\n                startTimeTBD ? \"TBD\" : startTime\r\n            } - ${home.triCode} vs ${visitor.triCode}`\r\n        }</h3>\r\n        <p>{`${arena.name}, ${arena.city}, ${arena.stateAbbr}`}</p>\r\n        {current ? <h4 className=\"ongoing\">GAME IN PROGRESS</h4> :\r\n        <h4>{status === 3 &&\r\n            `${home.score} : ${visitor.score} - ${\r\n                Number(home.score) === Number(visitor.score) ?\r\n                \"DRAW\" : Number(home.score) > Number(visitor.score) ?\r\n                home.triCode + \" WIN\" : visitor.triCode + \" WIN\"\r\n            }`\r\n        }</h4>}\r\n\r\n        {expand && <>\r\n        {current || endTime !== undefined ?\r\n        <p>Game Duration: {duration.hours} hours, {duration.minutes} minutes {\r\n            current && <span>(ongoing)</span>\r\n        }</p> : <></>}\r\n\r\n        <h5>{home.triCode} TEAM RECORD</h5>\r\n            <p>Wins: {home.win === \"\" ? \"TBD\" : home.win}</p>\r\n            <p>Losses: {home.loss === \"\" ? \"TBD\" : home.loss}</p>\r\n            <p>Series Wins: {home.seriesWin === \"\" ? \"TBD\" : home.seriesWin}</p>\r\n            <p>Series Losses: {home.seriesLoss === \"\" ? \"TBD\" : home.seriesLoss}</p>\r\n\r\n        <h5>{visitor.triCode} TEAM RECORD</h5>\r\n            <p>Wins: {visitor.win === \"\" ? \"TBD\" : visitor.win}</p>\r\n            <p>Losses: {visitor.loss === \"\" ? \"TBD\" : visitor.loss}</p>\r\n            <p>Series Wins: {visitor.seriesWin === \"\" ? \"TBD\" : visitor.seriesWin}</p>\r\n            <p>Series Losses: {visitor.seriesLoss === \"\" ? \"TBD\" : visitor.seriesLoss}</p>\r\n        </>}\r\n\r\n        <p className=\"dropdown\">\r\n            {expand ? <><GoTriangleUp /> click to collapse</> :\r\n            <><GoTriangleRight /> click to expand</>}\r\n        </p>\r\n    </GameWrap>\r\n};\r\n\r\n// Game Styled Component\r\nconst GameWrap = styled.li`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    margin: 10px;\r\n    padding: 20px;\r\n    border: 2px solid #333;\r\n    border-radius: 10px;\r\n    min-width: 300px;\r\n    width: 100%;\r\n    transition: 500ms ease-out;\r\n    background: white;\r\n    cursor: pointer;\r\n\r\n    & > h4, h5 { margin: 5px 0 };\r\n    & > .ongoing, p > span { color: orangered };\r\n    & > .dropdown {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-top: 5px;\r\n        font-style: italic;\r\n        font-size: small;\r\n    };\r\n    &:hover {\r\n        transform: scale(105%);\r\n        border: 2px solid orange;\r\n        transition: 300ms ease-in;\r\n    };\r\n`;\r\n\r\nexport default Game;","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Sub-Components\r\nimport Scroll from \"./Scroll\"; // Scroll Schedule Button\r\nimport Game from \"./Game\"; // Game Details Box\r\n\r\n// Schedule Component\r\nconst Schedule = ({ date, setDate }) => {\r\n    // State to parse JSON Data\r\n    const [games, setGames] = useState(null);\r\n    // State to indicate loading status\r\n    const [load, setLoad] = useState(\"idle\");\r\n\r\n    // Fetching Schedule Date by Date\r\n    useEffect(() => {\r\n        setLoad(\"loading\"); // Init Loading State\r\n        fetch(`https://data.nba.net/prod/v1/${\r\n            date.toISOString().slice(0, 10).split(\"-\").join(\"\")\r\n        }/scoreboard.json`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            if (data.games.length === 0) {\r\n                return setLoad(\"empty\");\r\n            }\r\n            else {\r\n                setLoad(\"loaded\");\r\n                return setGames(data.games);\r\n            }\r\n        })\r\n    }, [date])\r\n\r\n    return <Wrap>\r\n        <Scroll id=\"left\" date={date} setDate={setDate} /* Scroll to Previous Day */ />\r\n\r\n        <ScheduleWrap>\r\n            <h2>{date.toDateString() === new Date().toDateString() ?\r\n                `Today's Schedule (${date.toDateString()})` :\r\n                `Schedule for ${date.toDateString()}`\r\n            }</h2>\r\n\r\n            {load === \"loading\" ? <h3>LOADING...</h3> :\r\n            load === \"empty\" ?\r\n            <h3>NO GAMES ARE SCHEDULED FOR {\r\n                date.toDateString() === new Date().toDateString() ?\r\n                \"TODAY\" : date.toDateString()\r\n            }</h3> :\r\n            games !== null && <GamesWrap>{\r\n                games.map(game => <Game\r\n                    key={game.gameId} // GameID (KEY)\r\n                    // id={game.gameId} // GameID\r\n                    arena={game.arena} // Venue\r\n\r\n                    home={game.hTeam} // Home Team Info\r\n                    visitor={game.vTeam} // Visitor Team Info\r\n\r\n                    startTime={game.startTimeEastern} // Game Start Time (Eastern Time GMT-0500)\r\n                    startTimeTBD={game.isStartTimeTBD} // Unscheduled Game Start Time\r\n                    endTime={game.endTimeUTC} // Game End Time\r\n\r\n                    current={game.isGameActivated} // Is the game underway?\r\n                    status={game.statusNum} // Status Code // 3 equals \"finished game\"\r\n                    duration={game.gameDuration} // Duration of Game (Hours, Minutes)\r\n                />)\r\n            }</GamesWrap>}\r\n        </ScheduleWrap>\r\n\r\n        <Scroll id=\"right\" date={date} setDate={setDate} /* Scroll to Next Day */ />\r\n    </Wrap>\r\n};\r\n\r\n// Styled Components\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n`;\r\n\r\nconst ScheduleWrap = styled.div`\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    flex: 1;\r\n    padding: 50px 100px;\r\n    transition: 300ms ease-in-out;\r\n    \r\n    & > h2 {\r\n        margin-bottom: 20px;\r\n        text-align: center;\r\n    };\r\n`;\r\n\r\nconst GamesWrap = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    flex: 1;\r\n    list-style: none;\r\n`;\r\n\r\nexport default Schedule;","import React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// GlobalStyles (CSS3) and CSS styled-components\nimport styled from \"styled-components\";\nimport GlobalStyles from \"./GlobalStyles\";\n\n// Schedule Component\nimport Schedule from \"./Schedule\";\n\n// Main App Component\nconst App = () => {\n  const [date, setDate] = useState(new Date());\n\n  return <Wrapper>\n    <GlobalStyles />\n    <BrowserRouter>\n      <Header>\n        <h1>NBA Games Schedule</h1>\n        <p>{ // Date indicator for header\n          date.toDateString() === new Date().toDateString() ?\n          `TODAY: ${date.toDateString()}` : date.toDateString()\n        }</p>\n      </Header>\n      <Routes>\n        <Route path=\"/\" element={\n          // Schedule Component with date and setDate state\n          <Schedule date={date} setDate={setDate} />\n        } />\n      </Routes>\n    </BrowserRouter>\n  </Wrapper>\n}\n\n// Styled Components\nconst Wrapper = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  background: #ddd;\n  width: 100vw;\n  height: 100vh;\n  overflow-y: auto;\n`;\n\n// Top Header (Static)\nconst Header = styled.header`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n  background: #aaa;\n  padding: 5px 20px;\n\n  & > h1 { color: #fff };\n  & > p {\n    color: #111;\n    font-weight: bold;\n    font-size: large;\n  };\n`;\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}